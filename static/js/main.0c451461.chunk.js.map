{"version":3,"sources":["components/Notes.js","components/ProductItem.js","components/Products.js","components/App.js","index.js"],"names":["Notes","react_default","a","createElement","className","Component","ProductItem","_this$props$item","this","props","item","category","title","weight","size","width","length","height","Fragment","Products","products","average","map","index","ProductItem_ProductItem","key","App","state","filtered_products","next_page","filter","extension","avg","fetchData","url","concat","fetch","then","response","json","data","_this","setState","Object","toConsumableArray","filterProducts","current_extension","catch","error","console","log","nextPage","storeFilter","e","target","value","toLowerCase","filtered","includes","calculateWeights","copy","sum","error_count","i","entries","Notes_Notes","placeholder","type","onChange","Products_Products","style","marginTop","onClick","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c451461.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Notes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Notes</h3>\r\n                <strong>Instructions</strong>\r\n                <ul className=\"collection\">\r\n                    <li className=\"collection-item\">Assume dimensions are in centimetres</li>\r\n                    <li className=\"collection-item\">Cubic meter multiplied by 250 factor gives <strong>cubic weight</strong></li>\r\n                </ul>\r\n                <strong>My Assumptions</strong>\r\n                <ul className=\"collection\">\r\n                    <li className=\"collection-item\">Measurements need to be converted into meters (/100)</li>\r\n                    <li className=\"collection-item\">Number of pages is variable</li>\r\n                    <li className=\"collection-item\">A product may not have any dimensions, dimensions can be empty or null</li>\r\n                    <li className=\"collection-item\">A page may not have a next page, pages can be null</li>\r\n                    <li className=\"collection-item\">The api validates/serializes before sending the response, therefore numbers cannot be strings</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ProductItem extends Component {\r\n    render() {\r\n        let {category, title, weight, size } = this.props.item;\r\n        let {width, length, height} = size;\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td>{title}</td>\r\n                    <td>{category}</td>\r\n                    <td>{weight}</td>\r\n                    <td>{width}</td>\r\n                    <td>{length}</td>\r\n                    <td>{height}</td>\r\n                    <td>{(width/100) * (length/100) * (height/100) * 250 * 1000}</td>\r\n                </tr>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/**<th>Title</th>\r\n<th>Category</th>\r\n<th>Weight</th>\r\n<th>Width</th>\r\n<th>Length</th>\r\n<th>Height</th>\r\n */\r\n","import React, { Component } from 'react'\r\nimport ProductItem from './ProductItem';\r\n\r\nexport default class Products extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Products</h3>\r\n                <p>Found <span className=\"chip orange white-text\">{this.props.products.length} products</span>. \r\n                Average weight for these products <span className=\"chip pink white-text\">{this.props.average} grams</span></p>\r\n                    <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Category</th>\r\n                            <th>Weight</th>\r\n                            <th>Width</th>\r\n                            <th>Length</th>\r\n                            <th>Height</th>\r\n                            <th>Cubic weight (grams)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.products.map((item, index) => {\r\n                        return ( <ProductItem item={item} key={index}/>)\r\n                    })}\r\n                    </tbody>\r\n                    </table>              \r\n                    </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Notes from './Notes';\r\nimport Products from './Products';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        products: [],\r\n        filtered_products: [],\r\n        next_page: null,\r\n        filter:'',\r\n        extension: '/api/products/1',\r\n        avg:null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.state.extension);\r\n    }\r\n\r\n\r\n    // Grab the data from api, using variable extension \r\n    // Needs a cors fix\r\n    // Also need to reset filtered products each call.\r\n    fetchData = (extension) => {\r\n        const cors_fix = 'https://cors-anywhere.herokuapp.com/';\r\n        const url_base = 'http://wp8m3he1wt.s3-website-ap-southeast-2.amazonaws.com';\r\n        \r\n        let url = `${cors_fix}${url_base}${extension}`;\r\n        \r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                products: [...this.state.products, ...data[\"objects\"]],\r\n                filtered_products: [...this.state.products, ...data[\"objects\"]],\r\n                next_page: data[\"next\"]\r\n            })\r\n\r\n            this.filterProducts()\r\n            this.setState({current_extension: extension})\r\n        })\r\n        .catch(error => console.log(`API CALL ERROR: ${error}`))\r\n    }\r\n\r\n\r\n    // Go to next page, generate data for next page\r\n    nextPage = () => {\r\n        let extension = this.state.next_page\r\n        this.fetchData(extension)\r\n    }\r\n\r\n\r\n    // Store the filter from onChange event\r\n    storeFilter = (e) => {\r\n        let filter = e.target.value.toLowerCase();\r\n        this.setState({filter}, ()=> this.filterProducts())\r\n    }\r\n\r\n\r\n    // Filter the products in state\r\n    filterProducts = () => {\r\n        if (this.state.filter.length > 0) {\r\n            let filtered = this.state.products.filter(item=> item[\"category\"].toLowerCase().includes(this.state.filter))\r\n            this.setState({filtered_products: filtered})\r\n        } else {\r\n            this.setState({filtered_products: [...this.state.products]})\r\n        }\r\n\r\n        let avg = this.calculateWeights();\r\n        this.setState({avg})\r\n        \r\n        \r\n    }\r\n\r\n    // Calculates the average cubic weights of the filtered products within state\r\n    // returns average\r\n    calculateWeights = () => {\r\n\r\n        let copy = this.state.filtered_products\r\n        let length = copy.length\r\n        let sum = 0\r\n        let error_count = 0\r\n\r\n        for (let i=0; i<copy.length; i++) {\r\n            if (Object.entries(copy[i].size).length > 0 ) {\r\n                let cubic_weight = (\r\n                      (copy[i].size.height / 100)\r\n                    * (copy[i].size.length / 100)\r\n                    * (copy[i].size.width / 100)\r\n                    * 250 * 1000)\r\n                sum += cubic_weight\r\n            } else {\r\n                error_count += 1\r\n            }\r\n        }\r\n\r\n        return sum / (length - error_count)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"section\">\r\n                <section className=\"container\">\r\n                <Notes/>\r\n\r\n                <h3>Filter By</h3>\r\n                <p>Filters by product category on the current page. Case insensitive. When empty, all results are returned.</p>\r\n                <input placeholder=\"Enter a product category\" type=\"text\" onChange={this.storeFilter}/>\r\n\r\n                <Products products={this.state.filtered_products} average={this.state.avg}/>\r\n                { \r\n                    this.state.next_page ? \r\n                    <button style={{marginTop: '1rem'}} className=\"btn-large waves-effect waves-light indigo\" onClick={this.nextPage}>Load More</button> :\r\n                    <button style={{marginTop: '1rem'}} className=\"btn-large waves-effect waves-light indigod\">No more products </button> \r\n                }\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}